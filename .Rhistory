rm(list = ls())
i <- 1
value <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
return(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
shunt_calc <- function(value) {
# partial alveolar O2 pressure
# FiO2*(Patm-PH2O)-PaCO2/RQ + Correction Factor (2)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
}
blood_gas <- ask_for_values(value)
shunt_calc(blood_gas)
rm(list = ls())
i <- 1
value <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
shunt_calc(blood_gas)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
shunt_calc <- function(value) {
# partial alveolar O2 pressure
# FiO2*(Patm-PH2O)-PaCO2/RQ + Correction Factor (2)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
}
blood_gas <- ask_for_values(value)
rm(ls())
rm(list = ls())
i <- 1
value <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
shunt_calc <- function(value) {
# partial alveolar O2 pressure
# FiO2*(Patm-PH2O)-PaCO2/RQ + Correction Factor (2)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
}
blood_gas <- ask_for_values(value)
ls()
debug(ask_for_values)
rm(list = ls())
i <- 1
value <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
shunt_calc <- function(value) {
# partial alveolar O2 pressure
# FiO2*(Patm-PH2O)-PaCO2/RQ + Correction Factor (2)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
}
blood_gas <- ask_for_values(value)
ask_for_values(value)
debug(ask_for_values(value))
rm(list = ls())
i <- 1
value <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
# shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
blood_gas <- ask_for_values(value)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
PAO2
value["Patm",]
shunt_calc <- function(value) {
# partial alveolar O2 pressure
# FiO2*(Patm-PH2O)-PaCO2/RQ + Correction Factor (2)
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
}
PAO2
Cco2
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
PAO2
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
Cco2
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
Cao2
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
Cvo2
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
return(cat("The shunt is:", as.numeric(SHUNT)))
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
PAO2
PAO2 <- as.numeric((blood_gas["Patm",]-47)-(blood_gas["PaCO2",]/0.8)+2)
PAO2
blood_gas
blood_gas <- ask_for_values(blood_gas)
blood_gas
rm(list = ls())
i <- 1
blood_gas <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
# shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
blood_gas <- ask_for_values(blood_gas)
blood_gas
rm(list = ls())
i <- 1
blood_gas <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
return(blood_values)
# shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
PAO2 <- as.numeric((blood_gas["Patm",]-47)-(blood_gas["PaCO2",]/0.8)+2)
PAO2
rm(list = ls())
i <- 1
blood_gas <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
return(blood_values)
# shunt_calc(blood_values)
# shunt_to_print <- shunt_calc(blood_values)
# str(shunt_to_print)
# cut("The shunt is:", shunt_to_print)
}
blood_gas <- ask_for_values(blood_gas)
blood_gas
PAO2 <- as.numeric((blood_gas["Patm",]-47)-(blood_gas["PaCO2",]/0.8)+2)
PAO2
Cco2 <- as.numeric(blood_gas["Hb",]*1.31)+(0.0031*PAO2)
Cco2
Cco2 <- as.numeric(blood_gas["Hb",]*1.31)+(0.0031*PAO2)
Cco2
blood_gas["Hb",]
Cao2 <- as.numeric(blood_gas["Hb",]*1.31*(blood_gas["fO2art",]/100))+(0.0031*blood_gas["PaO2",])
Cao2
Cao2
Cvo2 <- as.numeric(blood_gas["Hb",]*1.31*(blood_gas["fO2mven",]/100))+(0.0031*blood_gas["PvO2",])
Cvo2
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
SHUNT
rm(list = ls())
i <- 1
blood_gas <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
shunt_calc(blood_values)
}
shunt_calc <- function(value) {
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
# dont forget to assign the method return to a new object
# otherwise everything stays inside the method
return(cat("The shunt is:", as.numeric(SHUNT)))
}
ask_for_values(blood_gas)
rm(list = ls())
i <- 1
blood_gas <- matrix(
c(rep(0, 8)),
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2",
"PaCO2", "PvO2", "fiO2", "Patm")))
ask_for_values <- function(blood_values){
while(i <= length(blood_values)){
input <- NA
while(is.na(input) == TRUE){
input <- as.numeric(readline(cat(names(blood_values[i,]), "is: ")))
}
blood_values[i,] <- input
i <- i+1
}
shunt_calc(blood_values)
}
shunt_calc <- function(value) {
PAO2 <- as.numeric((value["Patm",]-47)-(value["PaCO2",]/0.8)+2)
# CAPILLARY OXYGEN CONTENT
# CcO2 = (Hgb * 1.31) + (0.0031 * PAO2)
# no multiplication with the arterial sat fraction
Cco2 <- as.numeric(value["Hb",]*1.31)+(0.0031*PAO2)
# ARTERIAL OXYGEN CONTENT
Cao2 <- as.numeric(value["Hb",]*1.31*(value["fO2art",]/100))+(0.0031*value["PaO2",])
# MIXED VEONOUS OXYGEN CONTENT
Cvo2 <- as.numeric(value["Hb",]*1.31*(value["fO2mven",]/100))+(0.0031*value["PvO2",])
# SHUNT
SHUNT <- ((Cco2-Cao2)/(Cco2-Cvo2))*100
# dont forget to assign the method return to a new object
# otherwise everything stays inside the method
return(cat("The shunt is:", as.numeric(SHUNT)))
}
ask_for_values(blood_gas)
getwd()
x <- rnorm(100)
df <- data.frame(x = x)
write.csv(df, "sim_data.csv")
x <- rnorm(100)
df <- data.frame(x = x)
write.csv(df, "sim_data.csv")
#!/usr/bin/env Rscript
x <- rnorm(100)
df <- data.frame(x = x)
write.csv(df, "sim_data.csv")
system("type R")
system()
"type R"
system("type R")
R.home()
file.path(R.home("bin"), "R")
df <- data.frame(
a = rnorm(100, 10, 50),
b = rnorm(100, 10, 50),
)
df <- data.frame(
a = rnorm(100, 10, 50),
b = rnorm(100, 10, 50)
)
df
?rnorm
hist(df$a)
attach(df)
lm(a~b)
df_lm <- lm(a~b)
summary(df_lm)
plot(df$a~df$b)
abline(df$a~df$b, col="red")
plot(df$a~df$b)
abline(df$a~df$b, col="red")
abline(df$a,df$b, col="red")
plot(df$a~df$b)
abline(df$a,df$b, col="red")
abline(lm(df$a~df$b), col="red")
plot(df$a~df$b)
abline(lm(df$a~df$b), col="red")
fitted(df_lm)
df <- data.frame(
a = rnorm(10, 10, 50),
b = rnorm(10, 10, 50)
)
attach(df)
df_lm <- lm(a~b)
df <- data.frame(
a = rnorm(10, 10, 50),
b = rnorm(10, 10, 50)
)
attach(df)
df_lm <- lm(a~b)
summary(df_lm)
plot(df$a~df$b)
abline(lm(df$a~df$b), col="red")
fitted(df_lm)
df <- data.frame(
a = rnorm(20, 10, 50),
b = rnorm(20, 10, 50)
)
attach(df)
df <- data.frame(
a = rnorm(20, 10, 50),
b = rnorm(20, 10, 50)
)
df_lm <- lm(a~b)
summary(df_lm)
plot(df$a~df$b)
abline(lm(df$a~df$b), col="red")
fitted(df_lm)
plot(fitted(df_lm))
abline(fitted(df_lm), co="green")
plot(fitted(df_lm))
plot(x=df$b, y=fitted(df_lm))
plot(df$a~df$b)
plot(fitted(df_lm)~df$b)
plot(fitted(df_lm)~df$b)
df$b
plot(df$a~df$b)
plot(fitted(df_lm)~df$b)
plot(fitted(df_lm)~df$b)
rm(list = ls())
y <- read.table(pipe("pbpaste"))
y
class(y)
y <- as(matrixread.table(pipe("pbpaste")))
class(y)
y <- as(matrixread.table(pipe("pbpaste")))
y <- as.matrix(read.table(pipe("pbpaste")))
class(y)
y
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
class(data_from_excel)
blood_manual <- matrix(
dimnames = list(c("Hb", "fO2art", "fO2mven", "PaO2", "PaCO2", "PvO2", "fiO2", "Patm")),
data_from_excel)
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R')
?power.t.test
power.t.test(n=NULL, sd=60, power = 95)
power.t.test(n=NULL, sd=60, power = 95, delta = 50)
power.t.test(n=NULL, sd=60, power = 0.9, delta = 50, type = "two.sample")
power.t.test(n=NULL, sd=60, power = 0.8, delta = 50, type = "two.sample")
power.t.test(n=NULL, sd=60, power = 0.8, delta = 80, type = "two.sample")
power.t.test(n=NULL, sd=60, power = 0.8, delta = 1, type = "two.sample")
power.t.test(n=NULL, sd=60, power = 0.8, delta = 10, type = "two.sample")
power.t.test(n=NULL, sd=60, power = 0.9, delta = 90, type = "two.sample")
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
View(data_from_excel)
rm(list = ls())
vec <- as.vector(read.table(pipe("pbpaste")))
vec <- as.vector(read.table(pipe("pbpaste")))
View(vec)
shapiro.test(vec$V1)
rm(list = ls())
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R')
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R')
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R')
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R', echo=TRUE)
rm(list = ls())
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R', echo=TRUE)
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R', echo=TRUE)
data_from_excel <- as.matrix(read.table(pipe("pbpaste")))
source('~/Library/Mobile Documents/com~apple~CloudDocs/R/Projects/SHUNT_Calculator/Shunt EZ for EXCEL.R')
